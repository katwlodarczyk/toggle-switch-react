[{"/Users/kat/code/toggle/toggle/src/index.js":"1","/Users/kat/code/toggle/toggle/src/App.js":"2","/Users/kat/code/toggle/toggle/src/reportWebVitals.js":"3","/Users/kat/code/toggle/toggle/src/components/toggle.js":"4"},{"size":500,"mtime":1607081585527,"results":"5","hashOfConfig":"6"},{"size":194,"mtime":1607082955412,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1607081585529,"results":"8","hashOfConfig":"6"},{"size":3573,"mtime":1607084883215,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"6bgg7t",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/kat/code/toggle/toggle/src/index.js",[],["20","21"],"/Users/kat/code/toggle/toggle/src/App.js",[],"/Users/kat/code/toggle/toggle/src/reportWebVitals.js",[],"/Users/kat/code/toggle/toggle/src/components/toggle.js",["22","23"],"import React, { useState , useEffect} from \"react\";\nimport styled, { keyframes } from 'styled-components';\nimport sun from './../assets/smiley-sun.svg';\n\n\nconst time = '0.1s';\nconst lightBackground = 'linear-gradient(90deg, #EAC29C 0%, #EDE8CF 100%)';\nconst darkBackground = 'linear-gradient(90deg, #46517F 0%, #8DA5B4 100%)';\nconst setAnimation = (from, to) => keyframes({from: from, to: to});\n\n\nconst OuterWrapper = styled.div`\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: ${lightBackground};\n    animation: ${time} ${({ showBackground }) => showBackground && setAnimation({ background: lightBackground }, { background: darkBackground })} linear;\n    animation-fill-mode: forwards;\n`;\n\nconst StyledWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    height: 50vh;\n    margin:0 auto;\n    z-index: 10000;\n`;\n\nconst Header = styled.h1`\ncolor: #333333;\nanimation: ${time} ${({ showLightfont }) => showLightfont && setAnimation({ color: '#333333' }, { color: '#ffffff' })} linear;\nanimation-fill-mode: forwards;\nposition: relative;\nfont-size: 40px;\nfont-family: 'Raleway Dots', cursive;\ndisplay: flex;\nalign-items: center;\nmargin-bottom:40px;\n`;\n\nconst StyledToggle = styled.div`\n   border-radius: 50px;\n   background:  linear-gradient(90deg, #FFA751 0%, #FFE259 100%);\n   animation: ${time}  ${({dark}) => dark && setAnimation({background: lightBackground}, {background: darkBackground})} linear;\n   animation-fill-mode: forwards;\n   height: 32px;\n   width: 58px;\n   display:flex;\n   position: relative;\n   align-self: center;\n   z-index:100;\n   box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 0px 2px rgba(0, 0, 0, 0.06), 0px 0px 1px rgba(0, 0, 0, 0.04);\n`;\n\nconst StyledSwitch = styled.span`\n   background: #ffffff url('./assets/smiley-sun.svg') no-repeat center;\n   z-index: 101;\n   width:28px;\n   height: 26px;\n   border-radius: 50px;\n   display:flex;\n   justify-content:center;\n   align-self: center;\n   margin-left: 3px;\n   margin-top:0.5px;\n   z-index: 10000;\n   animation: ${time}  ${({dark}) => dark && setAnimation({marginLeft: '3px', background: '#ffffff url(\\'./assets/smiley-sun.svg\\') no-repeat center'}, {marginLeft: '26px', background: '#ffffff url(\\'./assets/smiley-moon.svg\\') no-repeat center'})} linear;\n   cursor: pointer;\n   animation-fill-mode: forwards;\n`;\n\nconst Toggle = (props) => {\n    const [dark, setDark] = useState(false);\n    const {onDark, onNotDark} = props;\n    useEffect(() => {\n        if (!dark) {\n            onNotDark();\n            return;\n        }\n        onDark();\n    }, [dark])\n\n    const handleClick = () => {\n        setDark(!dark)\n    }; \n\n    return (<StyledToggle dark={dark}>\n        <StyledSwitch dark={dark} onClick={handleClick}></StyledSwitch>\n    </StyledToggle>\n    )};\n\nfunction ToggleComponent() {\n    const [showBackground, setShowBackground] = useState(false);\n    const [showLightfont, setShowLightfont] = useState(false);\n\n    const handleNotDark = () => setShowBackground(false) & setShowLightfont(false);\n    const handleDark = () => setShowBackground(true) & setShowLightfont(true);\n\n    \n\n    return (\n        <OuterWrapper showBackground={showBackground}>\n            <StyledWrapper>\n                <Header showLightfont= {showLightfont}>\n                    Toggle Switch\n                </Header>\n                        <Toggle onNotDark= {handleNotDark} onDark= {handleDark} />\n            </StyledWrapper>\n        </OuterWrapper>\n);\n}\n\nexport default ToggleComponent;",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":3,"column":8,"nodeType":"30","messageId":"31","endLine":3,"endColumn":11},{"ruleId":"32","severity":1,"message":"33","line":84,"column":8,"nodeType":"34","endLine":84,"endColumn":14,"suggestions":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'sun' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onDark' and 'onNotDark'. Either include them or remove the dependency array.","ArrayExpression",["38"],"no-global-assign","no-unsafe-negation",{"desc":"39","fix":"40"},"Update the dependencies array to be: [dark, onDark, onNotDark]",{"range":"41","text":"42"},[2647,2653],"[dark, onDark, onNotDark]"]