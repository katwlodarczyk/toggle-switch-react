{"version":3,"sources":["assets/smiley-sun.svg","components/toggle.js","App.js","reportWebVitals.js","index.js"],"names":["time","lightBackground","darkBackground","setAnimation","from","to","keyframes","OuterWrapper","styled","div","showBackground","background","StyledWrapper","Header","h1","showLightfont","color","StyledToggle","dark","StyledSwitch","span","marginLeft","Toggle","props","useState","setDark","onDark","onNotDark","useEffect","onClick","ToggleComponent","setShowBackground","setShowLightfont","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAAe,I,6oDCKf,IAAMA,EAAO,OACPC,EAAkB,mDAClBC,EAAiB,mDACjBC,EAAe,SAACC,EAAMC,GAAP,OAAcC,YAAU,CAACF,KAAMA,EAAMC,GAAIA,KAGxDE,EAAeC,IAAOC,IAAV,IAMAR,EACDD,GAAQ,qBAAGU,gBAAuCP,EAAa,CAAEQ,WAAYV,GAAmB,CAAEU,WAAYT,OAIzHU,EAAgBJ,IAAOC,IAAV,KASbI,EAASL,IAAOM,GAAV,IAECd,GAAQ,qBAAGe,eAAqCZ,EAAa,CAAEa,MAAO,WAAa,CAAEA,MAAO,eAUnGC,EAAeT,IAAOC,IAAV,IAGFT,GAAS,qBAAEkB,MAAkBf,EAAa,CAACQ,WAAYV,GAAkB,CAACU,WAAYT,OAWhGiB,EAAeX,IAAOY,KAAV,IAYFpB,GAAS,qBAAEkB,MAAkBf,EAAa,CAACkB,WAAY,MAAOV,WAAY,2DAA8D,CAACU,WAAY,OAAQV,WAAY,gEAKnLW,EAAS,SAACC,GAAW,IAAD,EACEC,oBAAS,GADX,mBACfN,EADe,KACTO,EADS,KAEfC,EAAqBH,EAArBG,OAAQC,EAAaJ,EAAbI,UACfC,qBAAU,WACDV,EAILQ,IAHIC,MAIL,CAACT,IAMJ,OAAQ,cAACD,EAAD,CAAcC,KAAMA,EAApB,SACJ,cAACC,EAAD,CAAcD,KAAMA,EAAMW,QALV,WAChBJ,GAASP,SA6BFY,MArBf,WAA4B,IAAD,EACqBN,oBAAS,GAD9B,mBAChBd,EADgB,KACAqB,EADA,OAEmBP,oBAAS,GAF5B,mBAEhBT,EAFgB,KAEDiB,EAFC,KASvB,OACI,cAACzB,EAAD,CAAcG,eAAgBA,EAA9B,SACI,eAACE,EAAD,WACI,cAACC,EAAD,CAAQE,cAAgBA,EAAxB,2BAGQ,cAAC,EAAD,CAAQY,UAXN,kBAAMI,GAAkB,GAASC,GAAiB,IAWjBN,OAVpC,kBAAMK,GAAkB,GAAQC,GAAiB,YCvFzDC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACI,cAAC,EAAD,OCKOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8b017423.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/smiley-sun.ce4de512.svg\";","import React, { useState , useEffect} from \"react\";\nimport styled, { keyframes } from 'styled-components';\nimport sun from './../assets/smiley-sun.svg';\n\n\nconst time = '0.1s';\nconst lightBackground = 'linear-gradient(90deg, #EAC29C 0%, #EDE8CF 100%)';\nconst darkBackground = 'linear-gradient(90deg, #46517F 0%, #8DA5B4 100%)';\nconst setAnimation = (from, to) => keyframes({from: from, to: to});\n\n\nconst OuterWrapper = styled.div`\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: ${lightBackground};\n    animation: ${time} ${({ showBackground }) => showBackground && setAnimation({ background: lightBackground }, { background: darkBackground })} linear;\n    animation-fill-mode: forwards;\n`;\n\nconst StyledWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    height: 50vh;\n    margin:0 auto;\n    z-index: 10000;\n`;\n\nconst Header = styled.h1`\ncolor: #333333;\nanimation: ${time} ${({ showLightfont }) => showLightfont && setAnimation({ color: '#333333' }, { color: '#ffffff' })} linear;\nanimation-fill-mode: forwards;\nposition: relative;\nfont-size: 40px;\nfont-family: 'Raleway Dots', cursive;\ndisplay: flex;\nalign-items: center;\nmargin-bottom:40px;\n`;\n\nconst StyledToggle = styled.div`\n   border-radius: 50px;\n   background:  linear-gradient(90deg, #FFA751 0%, #FFE259 100%);\n   animation: ${time}  ${({dark}) => dark && setAnimation({background: lightBackground}, {background: darkBackground})} linear;\n   animation-fill-mode: forwards;\n   height: 32px;\n   width: 58px;\n   display:flex;\n   position: relative;\n   align-self: center;\n   z-index:100;\n   box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 0px 2px rgba(0, 0, 0, 0.06), 0px 0px 1px rgba(0, 0, 0, 0.04);\n`;\n\nconst StyledSwitch = styled.span`\n   background: #ffffff url('./assets/smiley-sun.svg') no-repeat center;\n   z-index: 101;\n   width:28px;\n   height: 26px;\n   border-radius: 50px;\n   display:flex;\n   justify-content:center;\n   align-self: center;\n   margin-left: 3px;\n   margin-top:0.5px;\n   z-index: 10000;\n   animation: ${time}  ${({dark}) => dark && setAnimation({marginLeft: '3px', background: '#ffffff url(\\'./assets/smiley-sun.svg\\') no-repeat center'}, {marginLeft: '26px', background: '#ffffff url(\\'./assets/smiley-moon.svg\\') no-repeat center'})} linear;\n   cursor: pointer;\n   animation-fill-mode: forwards;\n`;\n\nconst Toggle = (props) => {\n    const [dark, setDark] = useState(false);\n    const {onDark, onNotDark} = props;\n    useEffect(() => {\n        if (!dark) {\n            onNotDark();\n            return;\n        }\n        onDark();\n    }, [dark])\n\n    const handleClick = () => {\n        setDark(!dark)\n    }; \n\n    return (<StyledToggle dark={dark}>\n        <StyledSwitch dark={dark} onClick={handleClick}></StyledSwitch>\n    </StyledToggle>\n    )};\n\nfunction ToggleComponent() {\n    const [showBackground, setShowBackground] = useState(false);\n    const [showLightfont, setShowLightfont] = useState(false);\n\n    const handleNotDark = () => setShowBackground(false) & setShowLightfont(false);\n    const handleDark = () => setShowBackground(true) & setShowLightfont(true);\n\n    \n\n    return (\n        <OuterWrapper showBackground={showBackground}>\n            <StyledWrapper>\n                <Header showLightfont= {showLightfont}>\n                    Toggle Switch\n                </Header>\n                        <Toggle onNotDark= {handleNotDark} onDark= {handleDark} />\n            </StyledWrapper>\n        </OuterWrapper>\n);\n}\n\nexport default ToggleComponent;","\nimport './App.css';\nimport ToggleComponent from './components/toggle';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <ToggleComponent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}